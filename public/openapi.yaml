openapi: 3.0.0
info:
  title: 'Challenge Diego Lazarte'
  version: 1.0.0
paths:
  /v1/createProduct:
    post:
      tags:
        - products
      summary: 'Create product'
      operationId: 8b5ee46e22961bc812d9b8951bd93008
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductForm'
      responses:
        '201':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Product created succesfully' }
                type: object
  '/v1/deleteProduct/{id}':
    delete:
      tags:
        - products
      summary: 'Delete product'
      operationId: e16af44395da5f537a4db6d342563df1
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
            pattern: '[0-9]+'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Product deleted succesfully' }
                type: object
  '/v1/products/{id}':
    get:
      tags:
        - products
      summary: 'Get Product by Id'
      operationId: a8bc3b1f5e0a7ee63f7c61d5900a3727
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
            pattern: '[0-9]+'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  '/v1/products/{slug}':
    get:
      tags:
        - products
      summary: 'Get Product by Slug'
      operationId: 0f8b1d83c418b26a39d86e9fc5fef51b
      parameters:
        -
          name: slug
          in: path
          required: true
          schema:
            type: string
            pattern: '[0-9-a-zA-Z]+'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /v1/products/search:
    post:
      tags:
        - products
      summary: 'Search product'
      operationId: 04b69e64aa62909939a7286bf462264b
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                keywords:
                  type: string
              type: object
              example:
                name: Monitor
                keywords: monitor
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  '/v1/updateProduct/{id}':
    put:
      tags:
        - products
      summary: 'Update product'
      operationId: c1c71d5d804e4d33347317a360237574
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
            pattern: '[0-9]+'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductForm'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Product updated succesfully' }
                type: object
  /v1/products:
    get:
      tags:
        - products
      summary: 'List all Products'
      operationId: a3a2d1d190c891312f074e45434c61ec
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /:
    get:
      summary: 'Message Welcome to Product API'
      operationId: 8f042dc0c574ec53000d68b979a707c7
      responses:
        '200':
          description: 'Welcome to Product API'
components:
  schemas:
    Product:
      title: Product
      description: Product
      required:
        - name
        - slug
        - description
        - price
        - stock
        - keywords
      properties:
        id:
          schema: Product
          type: integer
          example: 1
        name:
          schema: Product
          type: string
          example: Monitor
        slug:
          schema: Product
          type: string
          example: monitor
        description:
          schema: Product
          type: string
          example: "Monitor 20' pulgadas"
        price:
          schema: Product
          type: string
          example: '3899.99'
        stock:
          schema: Product
          type: string
          example: '34'
        keywords:
          schema: Product
          type: string
          example: monitor
      type: object
    ProductForm:
      title: ProductForm
      properties:
        name:
          schema: ProductForm
          type: string
          example: Teclado
        slug:
          schema: ProductForm
          type: string
          example: teclado
        description:
          schema: ProductForm
          type: string
          example: 'Teclado gammer'
        price:
          schema: ProductForm
          type: string
          example: '13899.99'
        stock:
          schema: ProductForm
          type: string
          example: '22'
        keywords:
          schema: ProductForm
          type: string
          example: 'teclado,gammer'
      type: object
