openapi: 3.0.0
info:
  title: 'Challenge Diego Lazarte'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8080/v1/'
    description: 'Challenge API server'
paths:
  /createProduct:
    post:
      tags:
        - products
      summary: 'Create product'
      operationId: 05adfcdc607edd78b3f57ed18e32778a
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductForm'
      responses:
        '201':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Product created succesfully' }
                type: object
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  '/deleteProduct/{id}':
    delete:
      tags:
        - products
      summary: 'Delete product'
      operationId: 4ed2d98b19d0efa8edc699c0e7d377f0
      parameters:
        -
          name: id
          in: path
          description: 'Numeric ID of the product to delete'
          required: true
          schema:
            type: integer
            pattern: '[0-9]+'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Product deleted succesfully' }
                type: object
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  '/products/{id}':
    get:
      tags:
        - products
      summary: 'Get Product by Id'
      operationId: b95bc49c3918be7783aa08b0fa4588eb
      parameters:
        -
          name: id
          in: path
          description: 'Numeric ID of the product to get'
          required: true
          schema:
            type: integer
            pattern: '[0-9]+'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  '/products/{slug}':
    get:
      tags:
        - products
      summary: 'Get Product by Slug'
      operationId: ef6949b4bf970208b697d13d84636ab3
      parameters:
        -
          name: slug
          in: path
          description: 'Slug of the product to get'
          required: true
          schema:
            type: string
            pattern: '[0-9-a-zA-Z]+'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /products/search:
    post:
      tags:
        - products
      summary: 'Search product'
      operationId: 51a205a8e1f8fa7c8013517d17c33f3c
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                keywords:
                  type: string
              type: object
              example:
                name: Monitor
                keywords: monitor
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  '/updateProduct/{id}':
    put:
      tags:
        - products
      summary: 'Update product'
      operationId: d874fd25378f5a541028153f6eddd43b
      parameters:
        -
          name: id
          in: path
          description: 'Numeric ID of the product to update'
          required: true
          schema:
            type: integer
            pattern: '[0-9]+'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductForm'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Product updated succesfully' }
                type: object
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /products:
    get:
      tags:
        - products
      summary: 'List all Products'
      operationId: 196883aa751d529e22091ebf57490f6b
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /:
    get:
      summary: 'Message Welcome to Product API'
      operationId: 8f042dc0c574ec53000d68b979a707c7
      responses:
        '200':
          description: 'Welcome to Product API'
      servers:
        -
          url: 'http://localhost:8080'
          description: 'Challenge API server'
components:
  schemas:
    Product:
      title: Product
      description: Product
      required:
        - name
        - slug
        - description
        - price
        - stock
        - keywords
      properties:
        id:
          schema: Product
          type: integer
          example: 1
        name:
          schema: Product
          type: string
          example: Monitor
        slug:
          schema: Product
          type: string
          example: monitor
        description:
          schema: Product
          type: string
          example: "Monitor 20' pulgadas"
        price:
          schema: Product
          type: string
          example: '3899.99'
        stock:
          schema: Product
          type: string
          example: '34'
        keywords:
          schema: Product
          type: string
          example: monitor
      type: object
    InternalServerError:
      title: InternalServerError
      properties:
        message:
          schema: InternalServerError
          type: string
        exception:
          schema: InternalServerError
          type: array
          items:
            properties:
              type:
                type: string
              code:
                type: integer
              message:
                type: string
              file:
                type: string
              line:
                type: integer
            type: object
      type: object
    ProductForm:
      title: ProductForm
      properties:
        name:
          schema: ProductForm
          type: string
          example: Teclado
        slug:
          schema: ProductForm
          type: string
          example: teclado
        description:
          schema: ProductForm
          type: string
          example: 'Teclado gammer'
        price:
          schema: ProductForm
          type: string
          example: '13899.99'
        stock:
          schema: ProductForm
          type: string
          example: '22'
        keywords:
          schema: ProductForm
          type: string
          example: 'teclado,gammer'
      type: object
